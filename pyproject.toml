[tool.poetry]
name = "ferry"
version = "0.1.0"
description = ""
authors = ["Dan Trickey <git@trickey.io>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "~5.2.0"
django-stubs-ext = "^5.1.3"
requests = "^2.32.3"
rules = "^3.5"
djangorestframework = "^3.16.0"
drf-spectacular = "^0.28.0"
django-filter = "^25.1"
authlib = "^1.5.2"
django-crispy-forms = "^2.3"
crispy-bootstrap5 = "^2025.4"
django-emoji-picker = "^0.0.6"
django-htmx = "^1.23.0"

[tool.poetry.group.prod.dependencies]
gunicorn = "^23.0.0"
psycopg = "^3.2.6"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.4"
pytest = "^8.0.0"
pytest-cov = "^6.1.1"
pytest-django = "^4.11.1"
djhtml = "^3.0.7"
mypy = "^1.15.0"
django-coverage-plugin = "^3.1.0"
django-stubs = {version = "^5.1.3", extras = ["compatible-mypy"]}
factory-boy = "^3.3.3"
types-requests = "^2.32.0.20250328"
time-machine = "^2.16.0"
djangorestframework-stubs = "^3.15.3"

[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = [
    "A",
    "ANN",
    "B",
    "BLE",
    "C4",
    "COM",
    "DJ",
    "DTZ",
    "E",
    "F",
    "FA",
    "FBT",
    "I",
    "N",
    "S",
    "T10",
    "UP",
    "W",
]
ignore = [
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "B009",    # Do not call `getattr` with a constant attribute value.
    "COM812",  # Conflicts with formatter
    "N999",    # Invalid module name
    "S101",    # S101 Use of `assert` detected
]

[tool.mypy]
plugins = ["mypy_django_plugin.main"]

warn_unused_ignores = true

strict_optional = true
no_implicit_optional = true

disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true

check_untyped_defs = true

[[tool.mypy.overrides]]
module = ["authlib.*", "crispy_forms.*", "django_filters.*", "emoji_picker.widgets", "factory.*", "rules.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["*.tests.*"]
disable_error_code = ["arg-type", "attr-defined"]

[tool.django-stubs]
django_settings_module = "ferry.core.settings.test"

[tool.coverage.run]
plugins = [
    'django_coverage_plugin',
]

omit = [
    "ferry/wsgi.py",
    "ferry/asgi.py",
    "*/migrations/*",
    "*/tests/*",
]

[tool.coverage.django_coverage_plugin]
template_extensions = 'html, txt, tex, email'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"