# Generated by Django 5.1 on 2024-10-03 17:40
from __future__ import annotations

import uuid
from typing import TYPE_CHECKING

import django.db.models.deletion
from django.db import migrations, models

if TYPE_CHECKING:
    from django.db.backends.base.schema import BaseDatabaseSchemaEditor
    from django.db.migrations.state import StateApps


def m2m_to_rsvp(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    PubEvent = apps.get_model("pub", "PubEvent")
    PubEventRSVP = apps.get_model("pub", "PubEventRSVP")

    for pub_event in PubEvent.objects.prefetch_related("attendees").all():
        for attendee in pub_event.attendees.all():
            PubEventRSVP.objects.create(pub_event=pub_event, person=attendee, is_attending=True)


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0005_move_person_table"),
        ("pub", "0003_remove_pubevent_unique_date_per_pub"),
    ]

    operations = [
        migrations.CreateModel(
            name="PubEventRSVP",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_attending", models.BooleanField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pub_event_rsvps",
                        to="accounts.person",
                    ),
                ),
                (
                    "pub_event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pub_event_rsvps",
                        to="pub.pubevent",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("person", "pub_event"),
                        name="one_rsvp_per_person_per_event",
                    )
                ],
            },
        ),
        migrations.RunPython(m2m_to_rsvp, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="pubevent",
            name="attendees",
        ),
    ]
